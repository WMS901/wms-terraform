#https://api.sol-wms.store 로 들어온 요청이 Kong API Gateway로 전달됨.
#TLS 인증 적용 (HTTPS)
#CORS 허용 (프론트엔드에서 API 요청 가능).
apiVersion: networking.k8s.io/v1
kind: Ingress #Kubernetes에서 외부 트래픽을 내부 서비스로 연결
metadata:
  name: kong-ingress #kong 네임스페이스에서 Ingress 설정을 관리.
  namespace: kong
  annotations:
    kubernetes.io/ingress.class: "nginx" #Nginx Ingress Controller 사용
#   cert-manager.io/cluster-issuer: "letsencrypt-prod" #Cert-Manager를 통해 Let's Encrypt 인증서 자동 발급
    nginx.ingress.kubernetes.io/rewrite-target: "/" #요청 URL을 kong-proxy 서비스로 그대로 전달
    nginx.ingress.kubernetes.io/proxy-body-size: "50m" #최대 요청 크기 50MB
    nginx.ingress.kubernetes.io/enable-cors: "true" #CORS 허용 (다른 도메인에서 API 호출 가능).

#https://api.sol-wms.store/api/inventory 요청 → Kong이 받아서 inventory-service로 전달
#https://api.sol-wms.store/api/user 요청 → Kong이 받아서 user-service로 전달
#모든 API 요청이 Kong을 통해 보안 및 로깅, 인증(JWT) 등을 거친 후 백엔드로 전달됨.
spec:
  tls:
    - hosts: #자동으로 HTTPS 적용
        - api.sol-wms.store #도메인에 TLS 적용
      secretName: kong-tls #kong-tls 라는 Secret에 인증서 저장 (Let's Encrypt에서 자동 생성).
  rules: #Ingress 라우팅 규칙 (Kong Proxy 연결)
    - host: api.sol-wms.store #해당 도메인에서만 요청을 수락.
      http:
        paths:
          - path: / #모든 경로(/api/inventory, /api/user 등)를 Kong으로 전달
            pathType: ImplementationSpecific
            backend: #요청을 Kong Proxy 서비스로 전달 (ClusterIP 서비스)
              service:
                name: kong-proxy #Kong이 내부에서 API Gateway 역할을 수행
                port:
                  number: 80
