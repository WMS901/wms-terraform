# Kong의 레플리카 수를 2개로 설정하여 고가용성을 보장
replicaCount: 2

# **📌 PostgreSQL 제거**
postgresql:
  enabled: false  # PostgreSQL 설치하지 않도록 변경

# DBless 모드(type: "off")로 실행하여 설정을 ConfigMap 또는 환경 변수에서 로드.
# DBless 모드를 사용이유
# Kong의 설정을 파일(kong.yml) 기반으로 관리.
# PostgreSQL이 필요 없으므로 운영 비용 절감 및 성능 최적화.
database:
  enabled: false 
  type: "off"

# Kong 서비스 설정
# HTTP(80) 및 HTTPS(443) 포트 활성화하여 API 요청을 처리.
# 내부 컨테이너에서는 8000 (HTTP), 8443 (HTTPS) 포트를 사용.
proxy:
  type: ClusterIP
  http:
    enabled: true
    servicePort: 80
    containerPort: 8000
  https:
    enabled: true
    servicePort: 443
    containerPort: 8443

# Admin API를 비활성화하여 보안 강화. (DBless 모드라 설정안함)
admin:
  enabled: false

# Kong 환경 변수 (DB 없이 실행) / kong.yml에서 API 설정을 로드.
extraEnvVars:
  - name: KONG_DATABASE
    value: "off"  # DB 없이 실행
  - name: KONG_DECLARATIVE_CONFIG
    value: "/opt/kong/kong.yml"  # kong.yml에서 API 설정을 로드.
  - name: KONG_SSL_CERT
    value: "/etc/kong/ssl/tls.crt"  # Secret을 통한 기존 인증서 적용
  - name: KONG_SSL_CERT_KEY
    value: "/etc/kong/ssl/tls.key"  # Secret을 통한 기존 키 적용  

# Kong Ingress 설정
ingressController:
  enabled: true
  installCRDs: false
  ingressClassName: "nginx" #Kong을 Ingress로 배포하고, nginx Ingress Controller를 사용.
  admin:
    enabled: false
  proxy:
    enabled: true
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: "/"
    tls:
      enabled: true
      secretName: kong-tls #HTTPS 적용(Let's Encrypt TLS 인증서)
    hosts:
      - api.sol-wms.store #도메인으로 API 트래픽을 수신.

# Kafka 연동 설정 (JWT 인증 이벤트 처리)
kafka:
  enabled: true
  #Kafka 클러스터의 브로커 주소를 지정.
  bootstrapServers: "my-cluster-kafka-0.kafka.svc.cluster.local:9092,my-cluster-kafka-1.kafka.svc.cluster.local:9092"
  topic: "kong_jwt_events" #JWT 인증 관련 이벤트를 kong_jwt_events 토픽으로 전송.
  securityProtocol: "PLAINTEXT" #TLS 미적용 (내부 네트워크에서 사용 시).

