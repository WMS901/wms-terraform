apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong
  namespace: kong
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kong
  template:
    metadata:
      labels:
        app: kong
    spec:
      volumes:
        - name: kong-config
          configMap:
            name: kong-config
        - name: kong-cert
          secret:
            secretName: kong-tls  # ✅ Secret에서 TLS 인증서 가져오기
      containers:
        - name: kong
          image: kong/kong-gateway:3.6
          env:
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_DECLARATIVE_CONFIG
              value: "/opt/kong/kong.yml"
            - name: KONG_PROXY_LISTEN
              value: "0.0.0.0:8000, 0.0.0.0:8443 ssl"
            - name: KONG_ADMIN_LISTEN
              value: "0.0.0.0:8001"
            - name: KONG_STATUS_LISTEN
              value: "0.0.0.0:8100"
            - name: KONG_SSL_CERT
              value: "/etc/kong/ssl/tls.crt"  # ✅ Secret 마운트된 인증서 사용
            - name: KONG_SSL_CERT_KEY
              value: "/etc/kong/ssl/tls.key"  # ✅ Secret 마운트된 키 사용
            - name: KONG_PLUGINS
              value: "bundled, jwt, kafka-log, prometheus"
            - name: KONG_LOG_LEVEL
              value: "info"
            - name: KONG_STREAM_LISTEN
              value: "off"
            - name: KONG_TRUSTED_IPS
              value: "0.0.0.0/0"
            - name: KONG_REAL_IP_HEADER
              value: "X-Forwarded-For"
            - name: KONG_KAFKA_BROKERS
              value: "my-cluster-kafka-0.kafka.svc.cluster.local:9092,my-cluster-kafka-1.kafka.svc.cluster.local:9092"
            - name: KONG_KAFKA_TOPIC
              value: "kong_jwt_events"
            - name: KONG_METRICS
              value: "prometheus"
          volumeMounts:
            - name: kong-config
              mountPath: /opt/kong/kong.yml
              subPath: kong.yml
            - name: kong-cert
              mountPath: /etc/kong/ssl  # ✅ Secret 마운트된 인증서 위치
              readOnly: true
          ports:
            - name: proxy
              containerPort: 8000
            - name: proxy-ssl
              containerPort: 8443
            - name: admin
              containerPort: 8001
            - name: status
              containerPort: 8100
          livenessProbe:
            httpGet:
              path: /status
              port: 8100
          readinessProbe:
            httpGet:
              path: /status
              port: 8100


